package com.cts.ofds.dao;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.dao.DataAccessException;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.stereotype.Component;

import com.cts.ofds.model.Cart;

@Component
public class CartDaoImpl implements CartDao{

JdbcTemplate jdbc;
	
	@Autowired
	public CartDaoImpl(JdbcTemplate jdbc) {
		this.jdbc=jdbc;
	}
	
	@SuppressWarnings("deprecation")
	@Override
	public List<Cart> getByUserId(String id) throws DataAccessException 
	{
		String sql = "select * from cart where userId = ?";
		return jdbc.query(sql, new Object[] {id}, CartRowMapper.rowmapper);
	}

	@Override
	public int delete(int id) throws DataAccessException
	{
		String sql = "delete from cart where cartId = ?";
		int response = jdbc.update(sql,id);
		return response;
	}
	
	@Override
	public int add(Cart cart) throws DataAccessException
	{
		String sql = "insert into cart(userId,dishId,dishName,price,quantity) values (?,?,?,?,?,?)";
		int response = jdbc.update(sql,cart.getUserId(),cart.getDishId(),cart.getDishName(),cart.getPrice(),cart.getQuantity());
		return response;
	}

	@Override
	@SuppressWarnings("deprecation")
	public Cart get(int id) throws DataAccessException
	{
		String sql = "select * from cart where cartId = ?";
		return jdbc.queryForObject(sql, new Object[] {id}, CartRowMapper.rowmapper);
	}
	@Override
	public int deleteAllByUserId(String id) throws DataAccessException
	{
		String sql = "delete from cart where userId = ?";
		int response = jdbc.update(sql,id);
		return response;
	}
	@Override
	public int update(int id,Cart cart) throws DataAccessException
	{
		String sql = "update cart set dishName=? , price=?, quantity=? where cartId= ?";
		return jdbc.update(sql,cart.getDishName(),cart.getPrice(),cart.getQuantity(),id);
	}
	
	@Override
	public int addByDishId(int dishId,String userId, int quantity) {
		String sql = "update cart set quantity = ? where dishId = ? and userId = ?";
		return jdbc.update(sql,quantity,dishId,userId);
	}
	
	@Override
	@SuppressWarnings({ "deprecation" })
	public Optional<Cart> getByDishId(String userId,int dishId) {
		String sql="select * from cart where dishId = ? and userId = ?";
		Cart cart = null;
		cart = jdbc.queryForObject(sql, new Object[] {dishId,userId}, CartRowMapper.rowmapper );
		return Optional.ofNullable(cart);
	}
}
